# OpenTelemetry Collector configuration for edge OS
# This collector runs on the host OS and forwards telemetry to the MicroShift cluster

receivers:
  # Host metrics receiver
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      disk:
        metrics:
          system.disk.io:
            enabled: true
          system.disk.operations:
            enabled: true
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
        metrics:
          system.network.io:
            enabled: true
      load:
        metrics:
          system.cpu.load_average.1m:
            enabled: true
          system.cpu.load_average.5m:
            enabled: true
          system.cpu.load_average.15m:
            enabled: true
      processes:
        metrics:
          system.processes.count:
            enabled: true
          system.processes.created:
            enabled: true

  # System logs receiver
  journald:
    directory: /var/log/journal
    units:
      - microshift
      - crio
      - podman
      - bootc-fetch-apply-updates
    priority: info

  # OTLP receiver for application traces/metrics
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  # Resource processor to add host information
  resource:
    attributes:
      - key: host.name
        from_attribute: host.name
        action: upsert
      - key: deployment.environment
        value: "edge"
        action: upsert
      - key: service.name
        value: "edge-host-system"
        action: upsert
      - key: service.version
        value: "1.0.0"
        action: upsert

  # Batch processor for performance
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    limit_mib: 128
    spike_limit_mib: 32

exporters:
  # Export to OpenTelemetry Collector in MicroShift cluster
  otlp/cluster:
    endpoint: "localhost:30317"  # NodePort service endpoint
    tls:
      insecure: true
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # Local debugging/logging exporter
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  # Prometheus metrics exporter for local scraping
  prometheus:
    endpoint: "0.0.0.0:9090"
    namespace: "edge_host"

service:
  pipelines:
    metrics:
      receivers: [hostmetrics, otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp/cluster, prometheus]
    
    logs:
      receivers: [journald, otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp/cluster, logging]
    
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp/cluster]

  extensions: []
  
  telemetry:
    logs:
      level: "info"
    metrics:
      address: "0.0.0.0:8888" 