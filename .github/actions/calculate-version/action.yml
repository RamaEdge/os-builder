name: 'Calculate Version'
description: 'Calculate semantic version based on Git history and branch information'
author: 'os-builder'
branding:
  icon: 'tag'
  color: 'blue'

outputs:
  version:
    description: 'Calculated semantic version'
    value: ${{ steps.version.outputs.version }}
  branch:
    description: 'Current branch name'
    value: ${{ steps.version.outputs.branch }}
  sha:
    description: 'Short commit SHA'
    value: ${{ steps.version.outputs.sha }}
  repository-owner:
    description: 'Repository owner in lowercase'
    value: ${{ steps.repo.outputs.owner }}

runs:
  using: 'composite'
  steps:
    - name: Get repository owner in lowercase
      id: repo
      shell: bash
      run: |
        OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        echo "owner=${OWNER}" >> $GITHUB_OUTPUT
        echo "Repository owner (lowercase): ${OWNER}"

    - name: Generate Version
      id: version
      shell: bash
      run: |
        # Get git information
        SHA=$(git rev-parse --short HEAD)
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        
        # Try to get version from latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
        
        # Extract version number from tag (remove 'v' prefix if present)
        VERSION_BASE=$(echo "$LATEST_TAG" | sed 's/^v//')
        
        # Count commits since last tag
        COMMITS_SINCE_TAG=$(git rev-list --count ${LATEST_TAG}..HEAD 2>/dev/null || echo "0")
        
        # Generate version based on context
        if [ "$BRANCH" = "main" ]; then
          if [ "$COMMITS_SINCE_TAG" = "0" ]; then
            # On main, at a tag - this is a release
            VERSION="$VERSION_BASE"
          else
            # On main, ahead of tag - this is a pre-release
            VERSION="$VERSION_BASE-dev.$COMMITS_SINCE_TAG+$SHA"
          fi
        elif [[ "$BRANCH" =~ ^release/.* ]]; then
          # Release branch
          RELEASE_VERSION=$(echo "$BRANCH" | sed 's/release\///')
          VERSION="$RELEASE_VERSION-rc.$COMMITS_SINCE_TAG+$SHA"
        else
          # Feature/other branch
          SAFE_BRANCH=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g')
          VERSION="$VERSION_BASE-$SAFE_BRANCH.$COMMITS_SINCE_TAG+$SHA"
        fi
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        echo "sha=$SHA" >> $GITHUB_OUTPUT
        echo "base_version=$VERSION_BASE" >> $GITHUB_OUTPUT
        echo "commits_since_tag=$COMMITS_SINCE_TAG" >> $GITHUB_OUTPUT
        
        echo "## ðŸ“‹ Version Information" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Generated Version**: \`$VERSION\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch**: \`$BRANCH\`" >> $GITHUB_STEP_SUMMARY
        echo "**Commit**: \`$SHA\`" >> $GITHUB_STEP_SUMMARY
        echo "**Base Version**: \`$VERSION_BASE\`" >> $GITHUB_STEP_SUMMARY
        echo "**Commits Since Tag**: $COMMITS_SINCE_TAG" >> $GITHUB_STEP_SUMMARY 