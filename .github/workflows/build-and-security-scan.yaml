name: Build and Container Scan (K3s)

on:
  push:
    branches: ['main']
    paths: ['os/**']
  pull_request:
    branches: ['main']
    paths: ['os/**']
  schedule:
    - cron: '0 1 * * Fri'  # Weekly builds on Fridays
    - cron: '0 2 1 * 1'    # Monthly security scans
  workflow_dispatch:
    inputs:
      iso_config:
        description: 'ISO Configuration'
        default: 'user'
        type: choice
        options: ['minimal', 'user', 'advanced', 'interactive', 'production']
      build_iso:
        description: 'Build ISO images'
        default: true
        type: boolean
      force_rebuild:
        description: 'Force rebuild (ignore cache)'
        default: false
        type: boolean

env:
  IMAGE_NAME: ramaedge-os-k3s
  REGISTRY: ghcr.io
  WORKING_PATH: ./os
  CONTAINERFILE: Containerfile.k3s

jobs:
  build-and-scan:
    name: Build and Scan K3s OS
    runs-on: self-hosted
    outputs:
      image-id: ${{ steps.build.outputs.image-id }}
      image-ref: ${{ steps.build.outputs.local-tag }}
      version: ${{ steps.version.outputs.version }}
    permissions:
      contents: read
      packages: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate version
        id: version
        uses: ./.github/actions/calculate-version

      - name: Build container image
        id: build
        uses: ./.github/actions/build-container
        with:
          containerfile: ${{ env.CONTAINERFILE }}
          image-name: ${{ env.IMAGE_NAME }}
          version: ${{ steps.version.outputs.version }}
          sha: ${{ steps.version.outputs.sha }}
          registry: ${{ env.REGISTRY }}
          repository-owner: ${{ steps.version.outputs.repository-owner }}
          working-path: ${{ env.WORKING_PATH }}

      - name: Security scan
        uses: ./.github/actions/security-scan
        with:
          image-ref: ${{ steps.build.outputs.local-tag }}
          severity: 'CRITICAL,HIGH'
          build-mode: 'k3s'
          sha: ${{ steps.version.outputs.sha }}

      - name: Test K3s container (PRs only)
        if: github.event_name == 'pull_request'
        run: |
          echo "ðŸ§ª Testing K3s container..."
          IMAGE_REF="${{ steps.build.outputs.local-tag }}"
          
          # Core functionality tests
          podman run --rm "$IMAGE_REF" /bin/bash -c "bootc status || true"
          podman run --rm "$IMAGE_REF" /bin/bash -c "k3s --version || echo 'K3s binary found'"
          podman run --rm "$IMAGE_REF" /bin/bash -c "kubectl version --client || echo 'kubectl binary found'"
          podman run --rm "$IMAGE_REF" /bin/bash -c "/usr/bin/otelcol --version || echo 'OTEL binary found'"
          
          echo "âœ… K3s tests passed!"

  build-iso:
    name: Build K3s ISO
    runs-on: self-hosted
    needs: build-and-scan
    if: github.event_name != 'pull_request' && (github.event_name != 'workflow_dispatch' || github.event.inputs.build_iso == 'true')
    permissions:
      contents: read
    strategy:
      matrix:
        config: ${{ github.event_name == 'workflow_dispatch' && fromJSON(format('["{0}"]', github.event.inputs.iso_config)) || fromJSON('["user"]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ISO
        run: |
          CONFIG_FILE="${{ env.WORKING_PATH }}/config-examples/${{ matrix.config }}-config.toml"
          IMAGE_REF="${{ needs.build-and-scan.outputs.image-ref }}"
          
          echo "ðŸ”¨ Building K3s ISO with ${{ matrix.config }} configuration..."
          
          mkdir -p iso-output
          podman pull quay.io/centos-bootc/bootc-image-builder:latest
          
          podman run --rm --privileged \
            --security-opt label=type:unconfined_t \
            -v $(pwd)/iso-output:/output \
            -v ${CONFIG_FILE}:/config.toml:ro \
            -v /run/user/$(id -u)/containers:/run/user/$(id -u)/containers:ro \
            quay.io/centos-bootc/bootc-image-builder:latest \
            --type iso \
            --config /config.toml \
            --local \
            "$IMAGE_REF"

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: k3s-os-iso-${{ matrix.config }}-v${{ needs.build-and-scan.outputs.version }}
          path: iso-output/
          retention-days: 30 