name: Build and Container Scan (K3s)

on:
  push:
    branches: ['main']
    paths: ['os/**']
  pull_request:
    branches: ['main']
    paths: ['os/**']
  schedule:
    - cron: '0 1 * * Fri'  # Weekly builds on Fridays
    - cron: '0 2 1 * 1'    # Monthly security scans
  workflow_dispatch:
    inputs:
      iso_config:
        description: 'ISO Configuration'
        default: 'user'
        type: choice
        options: ['minimal', 'user', 'advanced', 'interactive', 'production']
      build_iso:
        description: 'Build ISO images'
        default: true
        type: boolean
      force_rebuild:
        description: 'Force rebuild (ignore cache)'
        default: false
        type: boolean

env:
  IMAGE_NAME: ramaedge-os-k3s
  REGISTRY: ghcr.io
  WORKING_PATH: ./os
  CONTAINERFILE: Containerfile.k3s

jobs:
  build:
    name: Build K3s OS
    runs-on: self-hosted
    outputs:
      image-id: ${{ steps.build.outputs.image-id }}
      image-ref: ${{ steps.build.outputs.local-tag }}
      version: ${{ steps.version.outputs.version }}
    permissions:
      contents: read
      packages: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate version
        id: version
        uses: ./.github/actions/calculate-version

      - name: Build container image
        id: build
        uses: ./.github/actions/build-container
        with:
          containerfile: ${{ env.CONTAINERFILE }}
          image-name: ${{ env.IMAGE_NAME }}
          version: ${{ steps.version.outputs.version }}
          sha: ${{ steps.version.outputs.sha }}
          registry: ${{ env.REGISTRY }}
          repository-owner: ${{ steps.version.outputs.repository-owner }}
          working-path: ${{ env.WORKING_PATH }}
          enable-cache: ${{ github.event.inputs.force_rebuild != 'true' }}

  security-scan:
    name: Security Scan
    runs-on: self-hosted
    needs: build
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Security scan
        uses: ./.github/actions/trivy-scan
        with:
          scan-type: 'container'
          scan-ref: ${{ needs.build.outputs.image-ref }}
          severity: 'CRITICAL,HIGH'
          output-format: 'sarif'
          generate-sbom: 'true'
          upload-sarif: 'true'
          sarif-category: 'trivy-container-k3s'

  test:
    name: Test K3s Container
    runs-on: self-hosted
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test K3s container
        uses: ./.github/actions/test-container
        with:
          image-ref: ${{ needs.build.outputs.image-ref }}
          test-type: 'k3s'
          parallel: 'true'

  build-iso:
    name: Build K3s ISO
    runs-on: self-hosted
    needs: [build, security-scan]
    if: github.event_name != 'pull_request' && (github.event_name != 'workflow_dispatch' || github.event.inputs.build_iso == 'true')
    permissions:
      contents: read
    strategy:
      matrix:
        config: ${{ github.event_name == 'workflow_dispatch' && fromJSON(format('["{0}"]', github.event.inputs.iso_config)) || fromJSON('["user"]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build K3s ISO
        id: iso
        uses: ./.github/actions/build-iso
        with:
          image-ref: ${{ needs.build.outputs.image-ref }}
          config: ${{ matrix.config }}
          output-dir: 'iso-output'
          working-path: ${{ env.WORKING_PATH }}

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: k3s-os-iso-${{ matrix.config }}-v${{ needs.build.outputs.version }}
          path: ${{ steps.iso.outputs.iso-path }}
          retention-days: 30 