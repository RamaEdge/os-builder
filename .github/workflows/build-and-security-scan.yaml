name: Build and Container Scan (K3s)

on:
  push:
    branches: ['main']
    paths: ['os/**']
  pull_request:
    branches: ['main']
    paths: ['os/**']
  schedule:
    - cron: '0 1 * * Fri'  # Weekly builds
  workflow_dispatch:
    inputs:
      iso_config:
        description: 'ISO Configuration'
        default: 'user'
        type: choice
        options: ['minimal', 'user', 'advanced', 'interactive', 'production']
      build_iso:
        description: 'Build ISO images'
        default: true
        type: boolean
      force_rebuild:
        description: 'Force rebuild (ignore cache)'
        default: false
        type: boolean

# Centralized environment configuration
env:
  IMAGE_NAME: ramaedge/os-k3s
  REGISTRY: harbor.local
  CONTAINERFILE: Containerfile.k3s
  SCAN_SEVERITY: CRITICAL,HIGH,MEDIUM

jobs:
  # Combined build and scan job for efficiency
  build-and-scan:
    name: Build & Scan K3s OS
    runs-on: self-hosted
    outputs:
      image-ref: ${{ steps.build.outputs.image-ref }}
      version: ${{ steps.version.outputs.version }}
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load version configuration
        id: versions
        uses: ./.github/actions/load-versions

      - name: Calculate version
        id: version
        uses: ./.github/actions/calculate-version

      - name: Authenticate with Harbor
        uses: ./.github/actions/harbor-auth
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build container image
        id: build
        uses: ./.github/actions/build-container
        with:
          containerfile: ${{ env.CONTAINERFILE }}
          image-name: ${{ env.IMAGE_NAME }}
          version: ${{ steps.version.outputs.version }}
          sha: ${{ steps.version.outputs.sha }}
          registry: ${{ env.REGISTRY }}
          repository-owner: ${{ steps.version.outputs.repository-owner }}
          k3s-version: ${{ steps.versions.outputs.k3s-version }}
          otel-version: ${{ steps.versions.outputs.otel-version }}
          fedora-version: ${{ steps.versions.outputs.fedora-version }}
          enable-cache: ${{ github.event.inputs.force_rebuild != 'true' }}

      - name: Security scan
        uses: ./.github/actions/trivy-scan
        with:
          scan-ref: ${{ steps.build.outputs.image-ref }}
          severity: ${{ env.SCAN_SEVERITY }}
          output-format: 'sarif'
          upload-sarif: 'true'
          sarif-category: 'trivy-container-k3s'

  # Conditional test job (PR only)
  test:
    name: Test K3s Container
    runs-on: self-hosted
    needs: build-and-scan
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test K3s container
        uses: ./.github/actions/test-container
        with:
          image-ref: ${{ needs.build-and-scan.outputs.image-ref }}
          test-type: 'k3s'

  # Push to Harbor registry (main branch only)
  push:
    name: Push to Harbor Registry
    runs-on: self-hosted
    needs: build-and-scan
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with Harbor
        uses: ./.github/actions/harbor-auth
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Tag and push to Harbor
        run: |
          LOCAL_IMAGE="${{ needs.build-and-scan.outputs.image-ref }}"
          HARBOR_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-scan.outputs.version }}"
          
          echo "🏷️  Tagging image for Harbor registry..."
          echo "Source: $LOCAL_IMAGE"
          echo "Target: $HARBOR_IMAGE"
          
          podman tag "$LOCAL_IMAGE" "$HARBOR_IMAGE"
          
          echo "⬆️  Pushing to Harbor registry..."
          podman push "$HARBOR_IMAGE"
          
          echo "✅ Successfully pushed: $HARBOR_IMAGE"

  # Conditional ISO build (non-PR, configurable)
  build-iso:
    name: Build K3s ISO
    runs-on: self-hosted
    needs: build-and-scan
    if: >-
      github.event_name != 'pull_request' && 
      (github.event_name != 'workflow_dispatch' || github.event.inputs.build_iso == 'true')
    strategy:
      matrix:
        config: ${{ github.event_name == 'workflow_dispatch' && fromJSON(format('["{0}"]', github.event.inputs.iso_config)) || fromJSON('["user"]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build K3s ISO
        id: iso
        uses: ./.github/actions/build-iso
        with:
          image-ref: ${{ needs.build-and-scan.outputs.image-ref }}
          config: ${{ matrix.config }} 