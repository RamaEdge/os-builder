name: Build MicroShift OS

on:
  workflow_dispatch:
    inputs:
      microshift_version:
        description: 'MicroShift Version (default: release-4.19)'
        default: 'release-4.19'
      iso_config:
        description: 'ISO Configuration'
        default: 'user'
        type: choice
        options: ['minimal', 'user', 'advanced', 'interactive']
      build_iso:
        description: 'Build ISO'
        default: true
        type: boolean

env:
  IMAGE_NAME: ramaedge-os-microshift
  REGISTRY: ghcr.io
  REPO_OWNER: ramaedge

jobs:
  build-and-scan:
    name: Build MicroShift OS
    runs-on: ubuntu-22.04
    outputs:
      image-ref: ${{ steps.build.outputs.image-ref }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Calculate version
        id: version
        uses: ./.github/actions/calculate-version

      - name: Set MicroShift version
        id: microshift
        run: |
          VERSION="${{ github.event.inputs.microshift_version || 'release-4.19' }}"
          echo "microshift-version=${VERSION}" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Using MicroShift version: ${VERSION}"

      - name: Build container image
        id: build
        uses: ./.github/actions/build-container
        with:
          image-name: ${{ env.IMAGE_NAME }}
          image-tag: ${{ steps.version.outputs.version }}
          containerfile: Containerfile.fedora.optimized
          working-path: ./os
          registry: ${{ env.REGISTRY }}
          repository-owner: ${{ env.REPO_OWNER }}
          microshift-version: ${{ steps.microshift.outputs.microshift-version }}

      - name: Security scan
        uses: ./.github/actions/security-scan
        with:
          image-ref: ${{ steps.build.outputs.image-ref }}
          severity: 'CRITICAL,HIGH'
          build-mode: 'microshift'
          sha: ${{ steps.version.outputs.sha }}

      - name: Test container image
        run: |
          echo "ðŸ§ª Testing MicroShift container..."
          IMAGE_REF="${{ steps.build.outputs.image-ref }}"
          
          # Core functionality tests
          podman run --rm "$IMAGE_REF" /bin/bash -c "bootc status || true"
          podman run --rm "$IMAGE_REF" /bin/bash -c "microshift version || echo 'MicroShift binary found'"
          podman run --rm "$IMAGE_REF" /bin/bash -c "kubectl version --client || echo 'kubectl binary found'"
          podman run --rm "$IMAGE_REF" /bin/bash -c "ls -la /etc/microshift/manifests/observability-stack.yaml"
          
          echo "âœ… MicroShift tests passed!"

  build-iso:
    name: Build ISO
    runs-on: ubuntu-22.04
    needs: build-and-scan
    if: github.event.inputs.build_iso == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ISO
        run: |
          CONFIG="${{ github.event.inputs.iso_config || 'user' }}"
          IMAGE_REF="${{ needs.build-and-scan.outputs.image-ref }}"
          CONFIG_FILE="os/config-examples/${CONFIG}-config.toml"
          
          echo "ðŸ”¨ Building MicroShift ISO with ${CONFIG} configuration..."
          
          mkdir -p iso-output
          podman pull quay.io/centos-bootc/bootc-image-builder:latest
          
          podman run --rm --privileged \
            --security-opt label=type:unconfined_t \
            -v $(PWD)/iso-output:/output \
            -v $(PWD)/${CONFIG_FILE}:/config.toml:ro \
            quay.io/centos-bootc/bootc-image-builder:latest \
            --type iso \
            --config /config.toml \
            "${IMAGE_REF}"

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: microshift-os-iso-${{ github.event.inputs.iso_config }}-v${{ needs.build-and-scan.outputs.version }}
          path: iso-output/
          retention-days: 30 